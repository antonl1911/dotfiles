#!/bin/bash

#################################################################
########### VKSearch script (c) snoopcatt, 2010-2013 ############
########### Licensed under GNU GPL v2. ##########################
#################################################################
#################################################################
# для получения нового токена пройдите по ссылке:  
# https://oauth.vk.com/authorize?client_id=3723065&scope=audio,offline&redirect_uri=http://oauth.vk.com/blank.html&display=wap&response_type=token
sys_version="1.1"
sys_temp='/tmp' 
sys_output='/dev/stderr'
sys_method='audio.search'
#vkapi_token='b11dce5ea8c03d1d70e580f57f64cdc4477c3cf8d28b78ee0f2ba99f20c0d899c9f67b76beb9261da90dd'
vkapi_token='34675ad2e256d9e5fbdb76b48e191131f800573bdbe7923539a897750266567b3eb6dd1fa676aafe29455'
cfg_suggest_tracks='1'
cfg_color_output='1'
cfg_save_to="."
cfg_new_playlist='1'
cfg_write_tags='0'
cfg_search_count='300'
cfg_request_lyrics='0'
cfg_mplayer='mpv --audio-samplerate=44100 --no-video -playlist'
cfg_mode='make-playlist'
cfg_silent_mode='0'
cfg_single_get='0'
#################################################################

Info() {
 [ "$cfg_color_output" -eq 1 ] && message_text="$(echo $1|sed 's/COLOR_WHITE/\\e[1;37m/g;s/COLOR_RED/\\e[1;31m/g;s/COLOR_PURPLE/\\e[1;35m/g;s/COLOR_GREEN/\\e[1;32m/g;s/COLOR_YELLOW/\\e[1;33m/g')" ||  message_text="$(echo $1|sed 's/COLOR_WHITE//g;s/COLOR_RED//g;s/COLOR_PURPLE//g;s/COLOR_GREEN//g;s/COLOR_YELLOW//g')"
 [ "$cfg_color_output" -eq 1 ] && date_color="\e[1;36m" && color_reset="\e[00m"
 [ "$cfg_silent_mode" -ne 1 ] && echo -e "$date_color[$(date +%k:%M:%S)] ${color_reset}${message_text}${color_reset}" > $sys_output
 [ "$2" == "die" ] && exit 1
}

ShowHelp() {
 echo  "VKSearch $sys_version: Поиск, прослушивание и закачка музыки с сайта VKontakte.ru!"
 echo "Для работы скрипта не требуется авторизация ВКонтакте. by snoopcatt, © 2010-2013. Лицензировано под GNU GPL v2."
 echo -e "* Использование: vksearch [опции] запрос"
 echo -e "\t--help: показать это сообщение и закрыть vksearch\n"
 echo -e "\t--user-playlist: использовать плейлист пользователя(ей) по ID"
 echo -e "\t--get-recommends: рекомендации пользователя по ID (используется ВК)"
 echo -e "\t--suggest: рекомендации пользователя по ID или запросу (используетcя LastFM)"
 echo -e "\t--suggest-count=N для каждой рекомендованной группы ищем N песен"
 echo -e "\t--search: использовать поиск по всей коллекции ВК\n"
 echo -e "\t--play: проиграть найденный список треков"
 echo -e "\t--get: скачать найденный список треков"
 echo -e "\t--play-one: проиграть один из найденных треков"
 echo -e "\t--get-one: скачать один трек"
 echo -e "\t--make-playlist: создать плейлист\n"
 echo -e "\t--count=N: искать N треков"
 echo -e "\t--save-to=PATH: сохранять плейлист и треки в указанный PATH"
 echo -e "\t--write-tags: записывать id3 теги в скачанные треки"
 echo -e "\t--get-lyrics: скачать текст песни"
 echo -e "\t--silent: тихий режим"

 exit 0
}

GetParams() {
for var in $@ 
do
 case $var in
  --help) ShowHelp;;
  --user-playlist) sys_method='audio.get' && cfg_search_count='0'  ;;
  --recommended) sys_method='audio.getRecommendations' ;;
  --suggest) suggest_mode="$cfg_mode" && cfg_mode="suggest" && cfg_search_count='50'  ;;
  --suggest-count=*) cfg_suggest_tracks=$(echo $var | cut -d '=' -f 2) ;;
  --search) sys_method='audio.search';;
  --play) cfg_mode=play ;;
  --get) cfg_mode=get ;;
  --play-one) cfg_mode=play && cfg_search_count=1 ;;
  --get-one) cfg_mode=get && cfg_search_count=1 ;;
  --get-lyrics) cfg_mode=get-lyrics && cfg_search_count=1 && cfg_request_lyrics=1;;
  --make-playlist) cfg_mode=make-playlist ;;
  --count=*) cfg_search_count=$(echo $var | cut -d '=' -f 2) ;;
  --save-to=*) cfg_save_to=$(echo $var | cut -d '=' -f 2) ;;
  --write-tags) cfg_write_tags=1 ;;
  --silent) cfg_silent_mode=1 && cfg_wget="$cfg_silent_wget" ;;
  --*) Info "COLOR_REDОшибка разбора аргументов: Неизвестный параметр COLOR_YELLOW$var" die ;;
  *) [ -z "$query" ] && query="${var}" || query="${query} ${var}"  ;;
 esac
done
[ -z "$query" ] && ShowHelp
}

GetIdByLink() { 
  query="$1"
  wget --no-check-certificate "https://api.vk.com/method/users.get.xml?uids=$query&fields=uid" -qO -  |sed -n 's|<uid>\(.*\)</uid>|\1|p'|sed 's/^[ \t]*//'
}

Request() { 
 rm ${sys_temp}/vksearch.* 2>/dev/null
 Info "COLOR_WHITEДобро пожаловать в VKSearch $sys_version!"
 Info "COLOR_WHITEЗагрузка списка треков..."
 case $sys_method in
  "audio.get")
    for user in $query; do 
       echo "$user" | grep -qE '[a-zA-Zа-яА-Я0-9]' || continue
       echo "$user" | grep -qE '[a-zA-Zа-яА-Я]' && real_user=$(GetIdByLink $user)
       wget --no-check-certificate "https://api.vk.com/method/audio.get.xml?oid=$real_user&fields=uid&count=${cfg_search_count}&access_token=$vkapi_token" -qO - >> "${sys_temp}/vksearch.out" 
    done
    found=$(cat ${sys_temp}/vksearch.out | grep '<url>'|wc -l) ;;
  "audio.search")
    current_offset=0
    remain=$cfg_search_count
    for offset in `seq 0 $(($cfg_search_count/300))` ; do
      current_offset=$(($offset*300)) 
      [ $(($offset*300)) -eq $cfg_search_count ] && continue
      wget --no-check-certificate "https://api.vk.com/method/audio.search.xml?q=$query&sort=2&auto_complete=1&lyrics=${cfg_request_lyrics}&count=${remain}&offset=${current_offset}&access_token=$vkapi_token" -qO - >> "${sys_temp}/vksearch.out" 
      remain=$(($remain-300))
    done 
    found=$(cat ${sys_temp}/vksearch.out | grep '<url>'|wc -l)  ;;
  "audio.getLyrics")
    query="$(cat ${sys_temp}/vksearch.out | sed -n 's|<lyrics_id>\(.*\)</lyrics_id>|\1|p'|sed 's/^[ \t]*//')"
    wget --no-check-certificate "https://api.vk.com/method/audio.getLyrics.xml?lyrics_id=${query}&access_token=$vkapi_token" -qO "${sys_temp}/vksearch.lyrics" 
    found=$(cat ${sys_temp}/vksearch.out | grep '<url>'|wc -l)  ;;
  "audio.getRecommendations")
    echo "$query" | grep -qE '[a-zA-Zа-яА-Я]' && query=$(GetIdByLink $query)
    wget --no-check-certificate "https://api.vk.com/method/audio.getRecommendations.xml?uid=$query&count=${cfg_search_count}&access_token=$vkapi_token" -qO "${sys_temp}/vksearch.out" 
    found=$(cat ${sys_temp}/vksearch.out | grep '<url>'|wc -l) ;; 
 esac

 error_msg="$(cat ${sys_temp}/vksearch.out | sed -n 's|<error_msg>\(.*\)</error_msg>|\1|p'|sed 's/^[ \t]*//' )"
 error_code="$(cat ${sys_temp}/vksearch.out | sed -n 's|<error_code>\(.*\)</error_code>|\1|p'|sed 's/^[ \t]*//')"
 [ -n "$error_msg" ] && Info "COLOR_REDОшибка: $error_msg (Код COLOR_YELLOW$error_codeCOLOR_RED)" die
 
 song_count=$(cat ${sys_temp}/vksearch.out | grep '<url>'|wc -l )
 [ $song_count -eq 0 ] && Info "COLOR_REDПо запросу COLOR_PURPLE${query}COLOR_RED не найдено ни одного трека..." die || Info "COLOR_WHITEПо запросу COLOR_PURPLE${query}COLOR_WHITE найдено COLOR_GREEN${found}COLOR_WHITE композиций. Обработка первых COLOR_GREEN${song_count}COLOR_WHITE."
}

Parse() { 
 OLD_IFS=$IFS
 IFS=$'\n'
 song_urls=( `cat ${sys_temp}/vksearch.out | sed -n 's|<url>\(.*\)</url>|\1|p'|sed 's/^[ \t]*//' ` )
 song_artists=( `cat ${sys_temp}/vksearch.out | sed -n 's|<artist>\(.*\)</artist>|\1|p'|sed 's/^[ \t]*//' ` )
 song_titles=( `cat ${sys_temp}/vksearch.out | sed -n 's|<title>\(.*\)</title>|\1|p'|sed 's/^  //' ` )
 song_durations=( `cat ${sys_temp}/vksearch.out |sed -n 's|<duration>\(.*\)</duration>|\1|p'|sed 's/^[ \t]*//' ` )
 song_counts=$(( ${#song_urls[@]} - 1 ))
 IFS=$OLD_IFS
}

MakePlaylist() {
 cd "$cfg_save_to"
 [ $cfg_new_playlist -eq 1 ] && rm $cfg_save_to/VKontakte_PlayList.m3u 2>&-
 [ -f "$cfg_save_to/VKontakte_PlayList.m3u" ] || echo "#EXTM3U" > "$cfg_save_to/VKontakte_PlayList.m3u"
 for i in `seq 0 $song_counts` 
  do
    echo -e "#EXTINF:${song_durations[$i]},${song_artists[$i]} - ${song_titles[$i]}\n${song_urls[$i]}\n" >> "$cfg_save_to/VKontakte_PlayList.m3u"
  done 
 [ -f "$cfg_save_to/VKontakte_PlayList.m3u" ] && Info "COLOR_WHITEПлейлист сохранен как COLOR_PURPLE$cfg_save_to/VKontakte_PlayList.m3u" 
}

GetFiles() {
 cd "$cfg_save_to"
 for i in `seq 0 $song_counts` 
  do
   Info "COLOR_WHITEНачинаю закачку: COLOR_PURPLE${song_artists[$i]} - ${song_titles[$i]}"
   real_file="$( echo ${song_artists[$i]} - ${song_titles[$i]}.mp3 | sed 's/^[ \t]*//;s/&#39;//g;s/\//_/g;s/\\/_/g;s/:/_/g;s/\*/_/g;s/\?/_/g;s/|/_/g;s/>/_/g;s/</_/g;s/"/_/g;s/&quot;/_/g' | sed s/\'/_/g )"
   limitation="${real_file:0:70}"
   [ "${limitation##*.}" != "mp3" ] && real_file="${limitation}.mp3" || real_file="${limitation}"
   wget "${song_urls[$i]}" -cqO "$real_file"
   Info "COLOR_WHITEФайл COLOR_PURPLE${song_artists[$i]} - ${song_titles[$i]}COLOR_WHITE был загружен!"
   [ "$cfg_write_tags" -eq 1 ]  &&  id3 -2 -a "${song_artists[$i]}" -t "${song_titles[$i]}" "${song_artists[$i]} - ${song_titles[$i]}.mp3"
  done
 [ "$cfg_silent_mode" -eq 1 ] && echo "${song_artists[$i]} - ${song_titles[$i]}.mp3" 
}

GetLyrics() {
 cat ${sys_temp}/vksearch.lyrics|sed 's/<.*>//g;s/&quot;/"/g;/^[[:space:]]*$/d' > "${song_artists[0]} - ${song_titles[0]}.txt"
 Info "COLOR_WHITEТекст песни COLOR_PURPLE${song_artists[0]} - ${song_titles[0]}COLOR_WHITE сохранён!"
 [ "$cfg_silent_mode" -eq 1 ] && echo "${song_artists[$i]} - ${song_titles[$i]}.txt" 
}

GetSuggestions() {
  Info "COLOR_WHITEПолучение информации о рекомендуемых исполнителях..."
  rm ${sys_temp}/vksearch.similar.out 2>/dev/null
  for i in `seq 0 $song_counts` ; do
    query=${song_artists[$i]}
    wget -qO - "http://ws.audioscrobbler.com/2.0/artist/$query/similar.txt" | awk -F "," '{print $3}' >> ${sys_temp}/vksearch.similar.out
  done
  /bin/sort ${sys_temp}/vksearch.similar.out | uniq | /bin/sort -R | head -n $cfg_search_count > ${sys_temp}/vksearch.similar
}

cd "$cfg_save_to"
mkdir -p ${sys_temp}
GetParams $*
Request
Parse

case $cfg_mode in
 play)
    MakePlaylist
    ${cfg_mplayer} "$cfg_save_to/VKontakte_PlayList.m3u" ;;
 get)
    GetFiles ;; 
 make-playlist)
    MakePlaylist ;;
 get-lyrics)
    sys_method="audio.getLyrics"
    Request
    GetLyrics ;;
 suggest)
    GetSuggestions
    rm "$cfg_save_to/VKontakte_PlayList.m3u" 2>/dev/null
    Info "COLOR_WHITEНачинаю обработку рекомендуемых исполнителей..."
    cat ${sys_temp}/vksearch.similar | while read query ; do
      sys_method="audio.search" && cfg_silent_mode='1' && cfg_new_playlist='0' && cfg_search_count="$cfg_suggest_tracks";
      Request
      Parse
      [ "$suggest_mode" == "get" ] &&  cfg_silent_mode='0' GetFiles || MakePlaylist
    done
    [ "$suggest_mode" == "get" ] &&  Info "COLOR_WHITEФайлы успешно загружены." || Info "COLOR_WHITEПлейлист с рекомендациями сохранен как COLOR_PURPLE$cfg_save_to/VKontakte_PlayList.m3u" 
    [ "$suggest_mode" == "play" ] &&  ${cfg_mplayer} "$cfg_save_to/VKontakte_PlayList.m3u" ;;
esac
